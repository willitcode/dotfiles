# _ ____                     __ _       
#(_)___ \                   / _(_)      
# _  __) |   ___ ___  _ __ | |_ _  __ _ 
#| ||__ <   / __/ _ \| '_ \|  _| |/ _` |
#| |___) | | (_| (_) | | | | | | | (_| |
#|_|____/   \___\___/|_| |_|_| |_|\__, |
#                                  __/ |
#                                 |___/ 

# Which mod key to use (Mod4 for super, Mod1 for Alt)
set $mod Mod4

## SECTION: VAR DEFINITIONS ##
# Color variables
set $bg-color            #990000
set $inactive-bg-color   #2f343f
set $text-color          #ffffff
set $inactive-text-color #a6a6a6
set $urgent-bg-color     #ff3300
set $indicator           #ff3300

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3 "
set $ws4 "4 ++"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

## END SECTION: VAR DEFINITIONS ##


##SECTION: FONTS ##
# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Iosevka 8.5

## END SECTION: FONTS ##


## SECTION: COLORS ##
#Window colors          Border             Background         Text                 Indicator
client.focused          $bg-color          $bg-color          $text-color          $indicator
client.unfocused        $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator
client.focused_inactive $inactive-bg-color $inactive-bg-color $inactive-text-color $indicator
client.urgent           $urgent-bg-color   $urgent-bg-color   $text-color          $indicator

#i3bar for the bar, i3blocks for system info. Also contains
#bar {
#        status_command SCRIPT_DIR=~/.config/i3blocks/ i3blocks -c ~/.config/i3blocks/config
#        tray_output primary
#        colors {
#                background $inactive-bg-color
#                separator $inactive-bg-color
                #                  Border             Background         Text
#                focused_workspace  $bg-color          $bg-color          $text-color
#                inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
#                urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
#        }
#}

## END SECTION: COLORS


## SECTION: KEYBINDS ##


## SUBSECTION: ESSENTIALS ##

# Kill focused window
bindsym $mod+q kill

# Start dmenu (a program launcher)
# Bound this under KDE settings to be KRunner
#bindsym $mod+d exec --no-startup-id "PATH=$PATH:~/scripts qdbus org.kde.kglobalaccel /component/krunner_desktop org.kde.kglobalaccel.Component.invokeShortcut 'run command'"

# Open i3-dmenu-desktop (only shows programs shipping a .desktop file)
#bindsym $mod+Shift+d exec --no-startup-id i3-dmenu-desktop --dmenu='dmenu -i -fn "Iosevka-8.5" -nb "Dark Slate Gray" -sb "Dark Red" -nf "White" -sf "White"'

# Lock i3
#bindsym $mod+Escape exec i3lock --color "$bg-color"

# Suspend the system
bindsym $mod+Shift+Escape exec systemctl suspend

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
# reboot/shutdown thing
bindsym $mod+Shift+q exec --no-startup-id qdbus org.kde.ksmserver /KSMServer org.kde.KSMServerInterface.logout -1 -1 -1

# Change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# deal with split/stacking/tabbed
bindsym $mod+e layout toggle split
bindsym $mod+s layout stacking
bindsym $mod+t layout tabbed

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

## END SUBSECTION: ESSENTIALS ##



## SUBSECTION: LAUNCHERS ##

# Start a terminal
bindsym $mod+Return exec i3-sensible-terminal

# Start Firefox
bindsym $mod+w exec firefox

# Start thunderbird
bindsym $mod+m exec thunderbird

# Start spotify
bindsym $mod+Shift+i exec spotify

#Launch pavucontrol from the keyboard
bindsym $mod+Shift+o exec pavucontrol

# Start cadence
bindsym $mod+Shift+p exec cadence

# Start qalc, a calculator
bindsym $mod+c exec urxvt -e qalc

## END SUBSECTION: LAUNCHERS ##



# I genuinely have no idea what this does
# focus the parent container
#bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child



## SUBSECTION: WORKSPACES ##

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

# Moving workspaces between screens 
bindsym $mod+a move workspace to output left

# END SUBSECTION: WORKSPACES



## SUBSECTION: MEDIA & BACKLIGHT ##

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
# Using media keys
#bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id amixer set Master 5%+
#bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id amixer set Master 5%-
#bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id amixer set Master toggle
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
# Using = and -
#bindsym $mod+equal exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5% && $refresh_i3status
bindsym $mod+equal exec --no-startup-id amixer set Master 5%+
#bindsym $mod+minus exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5% && $refresh_i3status
bindsym $mod+minus exec --no-startup-id amixer set Master 5%-
#bindsym $mod+Shift+minus exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym $mod+Shift+minus exec --no-startup-id pactl amixer set Master toggle
bindsym $mod+Ctrl+minus exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Deal with brightness for my laptop screen
bindsym XF86MonBrightnessUp exec xbacklight -inc 10
bindsym XF86MonBrightnessDown exec xbacklight -dec 10

# Media player
bindsym $mod+o exec playerctl play-pause
bindsym $mod+i exec playerctl previous
bindsym $mod+p exec playerctl next

## END SUBSECTION: MEDIA & BACKLIGHT ##



## SUBSECTION: RESIZING ##
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        #bindsym Left resize shrink width 10 px or 10 ppt
        #bindsym Down resize grow height 10 px or 10 ppt
        #bindsym Up resize shrink height 10 px or 10 ppt
        #bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

## END SUBSECTION: RESIZING ##



## SUBSECTION: GAPS ##
mode "resize-gaps" {
        bindsym j gaps outer all plus 5
        bindsym k gaps inner all plus 5
        bindsym l gaps inner all minus 5
        bindsym semicolon gaps outer all minus 5

        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+g mode "default"
}

bindsym $mod+g mode "resize-gaps"
bindsym $mod+Shift+g gaps inner all set 10
gaps inner 10

## END SUBSECTION: GAPS ##

## END SECTION: KEYBINDS ##


# Make certain windows always float
for_window [class=Pavucontrol] floating enable
for_window [instance="Places" class="firefox"] floating enable

## SECTION: STARTUP ##

# Startup desktop apps (Discord goes first because it takes forever to load up)
exec sleep 1; discord
exec firefox
exec sleep 1; spotify
exec sleep 1; thunderbird

# Associate window classes with workspaces (I.E. always open Discord on workspace 3)
assign [class="firefox"] $ws3
assign [class="discord"] $ws4
assign [class="Thunderbird"] $ws4
for_window [class="spotify"] move container to workspace $ws4 #Somehow, this is broken. Spotify's linux client is a piece of crap.

# Reccomended when using i3 with KDE (which I am)
for_window [title="Desktop — Plasma"] kill; floating enable; border none
for_window [class="plasmashell"] floating enable;
for_window [class="Plasma"] floating enable; border none
for_window [title="plasma-desktop"] floating enable; border none
for_window [title="win7"] floating enable; border none
for_window [class="krunner"] floating enable
for_window [class="Kmix"] floating enable; border none
for_window [class="Klipper"] floating enable; border none
for_window [class="Plasmoidviewer"] floating enable; border none
for_window [class="(?i)*nextcloud*"] floating disable
for_window [class="plasmashell" window_type="notification"] floating enable, border none, move right 700px, move down 450px
no_focus [class="plasmashell" window_type="notification"]

# Startup background tasks
exec clipit
#Fancy thing to run i3lock when the computer is suspended
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --color "$bg-color" --nofork
exec --no-startup-id nm-applet
exec xcompmgr
exec dunst
exec hydroxide serve

# Stuff to run every time i3 is restarted (including inplace restarts, not including config reloads)
# Spoof MAC address to bypass Circle
exec_always /home/nacl10/scripts/spoofmacaddress
# Launch Polybar
exec_always /home/nacl10/scripts/polybar_run
# Deal with my external display
#exec_always xrandr -q | grep "HDMI1 connected" && xrandr --output HDMI1 --auto --left-of LVDS1 --primary
#exec_always xrandr -q | grep "HDMI2 connected" && xrandr --output HDMI2 --auto --left-of LVDS1 --primary
#exec_always xrandr -q | grep "HDMI2 disconnected" && xrandr --output HDMI2 --off && xrandr --output LVDS1 --primary
# Set workspace 4 to be tabbed
exec_always sleep 12; /home/nacl10/scripts/make4tabbed
# Set wallpaper
exec_always sleep 0.5; ~/scripts/setwallpaper ~/pix/slideshow

## END SECTION: STARTUP ##
